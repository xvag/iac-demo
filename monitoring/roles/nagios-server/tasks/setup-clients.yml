- name: Create configurations directory
  file:
    path: /usr/local/nagios/etc/servers
    state: directory

- name: Set Nagios Configuration file
  template:
    src: nagios.cfg.j2
    dest: /usr/local/nagios/etc/nagios.cfg

- name: Add command definitions
  template:
    src: commands.cfg.j2
    dest: /usr/local/nagios/etc/objects/commands.cfg

- name: Add hostgroups configuration
  template:
    src: hostgroups.cfg.j2
    dest: /usr/local/nagios/etc/objects/hostgroups.cfg

- name: Get EXTERNAL IPs of the Controllers
  become: false
  shell: |
    gcloud compute instances describe {{ item }} --zone={{ controller_zone }} \
      --format 'value(networkInterfaces[0].accessConfigs[0].natIP)'
  with_items:
    "{{ groups['controllers'] }}"
  register: controller_external_ip
  delegate_to: localhost

- name: Get EXTERNAL IPs of the Workers
  become: false
  shell: |
    gcloud compute instances describe {{ item }} --zone={{ worker_zone }} \
      --format 'value(networkInterfaces[0].accessConfigs[0].natIP)'
  with_items:
    "{{ groups['workers'] }}"
  register: worker_external_ip
  delegate_to: localhost

- name: Add Controllers configurations as Nagios Clients
  template:
    src: client-controller.cfg.j2
    dest: /usr/local/nagios/etc/servers/client.{{ item.1 }}.cfg
  with_indexed_items:
    "{{ groups['controllers'] }}"

- name: Add Workers configurations as Nagios Clients
  template:
    src: client-worker.cfg.j2
    dest: /usr/local/nagios/etc/servers/client.{{ item.1 }}.cfg
  with_indexed_items:
    "{{ groups['workers'] }}"

- name: Verify Nagios configuration files
  shell: |
    /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg

- name: Restart and Enable Nagios
  service:
    name: nagios
    state: restarted
    enabled: yes
